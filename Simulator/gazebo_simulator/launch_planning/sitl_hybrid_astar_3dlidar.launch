<launch>
	<!-- Launch Gazebo Simulation -->
	<arg name="x" default="0.0"/>
	<arg name="y" default="-10.0"/>
	<arg name="z" default="0"/>
	<arg name="gazebo_gui" default="false"/>
	<arg name="visualization" default="true"/>
	<arg name="type_in_goal" default="false"/>
	
	<arg name="is_2DLidar" default="false"/>
	<arg name="mapper_enable" default="false" />  <!-- true: 使用建图数据; false: 使用传感器原始数据 -->
	
	<arg name="vehicle_2Dlidar" default="amov_solo_hokuyo_2Dlidar"/>
	<arg name="vehicle_3Dlidar" default="amov_solo_3Dlidar"/>
	<arg name="world" default="$(find prometheus_gazebo)/worlds/obstacle.world"/>
	<arg name="pcd_file" value="$(find prometheus_gazebo)/maps/obstacle.pcd" />
	<arg name="model" default="amov_solo"/>
	<group if="$(arg is_2DLidar)">
		<include file="$(find prometheus_gazebo)/launch_basic/sitl.launch">
			<arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
			<arg name="world" value="$(arg world)"/>
			<arg name="sdf" value="$(find prometheus_gazebo)/amov_models/$(arg vehicle_2Dlidar)/$(arg vehicle_2Dlidar).sdf"/>
			<arg name="model" value="$(arg model)"/>
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
		</include>
		
		<!-- run the laser_to_pointcloud -->
		<node if="$(arg mapper_enable)" pkg="prometheus_gazebo" type="laser_to_pointcloud.py" name="laser_to_pointcloud" >
		</node>
		<!-- 启动octomap建图 -->
		<node if="$(arg mapper_enable)" pkg="octomap_server" type="octomap_server_node" name="octomap_server">
			<param name="resolution" value="0.1" />
			<!-- 发布地图的坐标系 -->
			<param name="frame_id" type="string" value="world" />
			<!-- 传感器最大感知范围 (speedup!) -->
			<param name="sensor_model/max_range" value="5.0" />
			<!-- 局部点云输入 -->
			<remap from="cloud_in" to="/prometheus/sensors/pcl2" />
		</node>
		
		<!-- 启动全局规划算法 -->
		<node pkg="prometheus_global_planning" name="global_planner_main" type="global_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">
			<!-- 如果直接使用  GroundTruth 点云输入 -->
			<!-- <remap from="/prometheus/global_planning/global_pcl" to="/prometheus/pcl_groundtruth" />-->
			<remap if="$(arg mapper_enable)" from="/prometheus/global_planning/global_pcl" to="/octomap_point_cloud_centers" />
			<remap unless="$(arg mapper_enable)" from="/prometheus/global_planning/laser_scan" to="/prometheus/sensors/2Dlidar_scan" />

			<!-- 0: A_star; 1: hybrid A_star -->
			<param name="global_planner/algorithm_mode" value="1" type="int"/>
			<param name="global_planner/sim_mode" value="true" type="bool"/>
			<param name="global_planner/planner_enable" value="true" type="bool"/>
			<!-- 二维平面规划 -->
			<param name="global_planner/is_2D" value="true" type="bool"/> <!-- 最好是，免得往z轴上跑 -->
			<param name="global_planner/control_yaw_flag" value="true" type="bool"/> <!-- 如果使用 2dLidar 就需要自旋以感知地图 -->
			<!-- ２维高度，建议与起飞高度一致 -->
			<param name="global_planner/fly_height_2D" value="1.0" type="double"/>
			<!-- 停止距离 -->
			<param name="global_planner/safe_distance" value="0.01" type="double"/> <!-- 若膨胀距离map/inflate设置已考虑安全距离，建议此处设为0 -->
			<param name="global_planner/time_per_path" value="0.5" type="double"/> <!-- 路径追踪执行频率 -->
			<param name="global_planner/replan_time" value="10.0" type="double"/> <!-- 重规划频率 -->
			<!-- 0:groundtruth点云、SLAM全局点云生成; 1:RGBD相机、三维激光雷达传感器数据输入; 2:2维激光雷达传感器数据输入 -->
			<param if="$(arg mapper_enable)" name="global_planner/map_input" value="0" type="int"/>
			<param unless="$(arg mapper_enable)" name="global_planner/map_input" value="2" type="int"/>
			<param name="global_planner/ground_removal" value="true" type="bool"/>
			<param name="global_planner/max_ground_height" value="0.2" type="double"/>
			<param name="global_planner/downsampling" value="true" type="bool"/>

			<param name="kinodynamic_astar/max_tau" value="0.5" type="double"/>
			<param name="kinodynamic_astar/init_max_tau" value="0.5" type="double"/>
			<param name="kinodynamic_astar/max_vel" value="1.0" type="double"/>
			<param name="kinodynamic_astar/max_acc" value="1.0" type="double"/>
			<param name="kinodynamic_astar/w_time" value="15.0" type="double"/>
			<param name="kinodynamic_astar/horizon" value="9.0" type="double"/>
			<param name="kinodynamic_astar/lambda_heu" value="2.0" type="double"/>
			<param name="kinodynamic_astar/time_resolution" value="5.0" type="double"/>
			<param name="kinodynamic_astar/margin" value="0.4" type="double"/>
			<param name="kinodynamic_astar/allocate_num" value="100000" type="int"/>
			<param name="kinodynamic_astar/check_num" value="5" type="int"/>
			<!-- 分辨率 -->
			<param name="map/resolution" value="0.2" type="double"/>
			<!-- 障碍物膨胀距离 -->
			<param name="map/inflate" value="0.8" type="double"/>
			<!-- 地图范围 -->
			<param name="map/origin_x" value="-15.0" type="double"/>
			<param name="map/origin_y" value="-15.0" type="double"/>
			<param name="map/origin_z" value="0.2" type="double"/>
			<param name="map/map_size_x" value="30.0" type="double"/>
			<param name="map/map_size_y" value="30.0" type="double"/>
			<param name="map/map_size_z" value="3.0" type="double"/>
		</node>
	</group>
	
	<group unless="$(arg is_2DLidar)">
		<include file="$(find prometheus_gazebo)/launch_basic/sitl.launch">
			<arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
			<arg name="world" value="$(arg world)"/>
			<arg name="sdf" value="$(find prometheus_gazebo)/amov_models/$(arg vehicle_3Dlidar)/$(arg vehicle_3Dlidar).sdf"/>
			<arg name="model" value="$(arg model)"/>
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
		</include>
		
		<!-- 启动 octomap 建图 -->
		<node if="$(arg mapper_enable)" pkg="octomap_server" type="octomap_server_node" name="octomap_server">
			<param name="resolution" value="0.1" />
			<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
			<param name="frame_id" type="string" value="map" />
			<!-- maximum range to integrate (speedup!) -->
			<param name="sensor_model/max_range" value="5.0" />
			<!-- data source to integrate (PointCloud2) -->
			<remap from="cloud_in" to="/prometheus/sensors/3Dlidar_scan" />
		</node>
		
		<!-- 启动全局规划算法 -->
		<node pkg="prometheus_global_planning" name="global_planner_main" type="global_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">
			<!-- 如果直接使用  GroundTruth 点云输入 -->
			<!-- <remap from="/prometheus/global_planning/global_pcl" to="/prometheus/pcl_groundtruth" />-->
			<remap if="$(arg mapper_enable)" from="/prometheus/global_planning/global_pcl" to="/octomap_point_cloud_centers" />
			<remap unless="$(arg mapper_enable)" from="/prometheus/global_planning/local_pcl" to="/prometheus/sensors/3Dlidar_scan" />

			<!-- 0: A_star; 1: hybrid A_star -->
			<param name="global_planner/algorithm_mode" value="1" type="int"/>
			<param name="global_planner/sim_mode" value="true" type="bool"/>
			<param name="global_planner/planner_enable" value="true" type="bool"/>
			<!-- 二维平面规划 -->
			<param name="global_planner/is_lidar" value="true" type="bool"/>
			<param name="global_planner/is_2D" value="false" type="bool"/>
			<param name="global_planner/control_yaw_flag" value="false" type="bool"/>
			<!-- 停止距离 -->
			<param name="global_planner/safe_distance" value="0.01" type="double"/> <!-- 若膨胀距离map/inflate设置已考虑安全距离，建议此处设为0 -->
			<param name="global_planner/time_per_path" value="0.5" type="double"/> <!-- 路径追踪执行频率 -->
			<param name="global_planner/replan_time" value="10.0" type="double"/> <!-- 重规划频率 -->
			<!-- 0:groundtruth点云、SLAM全局点云生成; 1:RGBD相机、三维激光雷达传感器数据输入; 2:2维激光雷达传感器数据输入 -->
			<param if="$(arg mapper_enable)" name="global_planner/map_input" value="0" type="int"/>
			<param unless="$(arg mapper_enable)" name="global_planner/map_input" value="1" type="int"/>
			<param name="global_planner/ground_removal" value="true" type="bool"/>
			<param name="global_planner/max_ground_height" value="0.2" type="double"/>
			<param name="global_planner/downsampling" value="true" type="bool"/>

			<param name="kinodynamic_astar/max_tau" value="0.5" type="double"/>
			<param name="kinodynamic_astar/init_max_tau" value="0.5" type="double"/>
			<param name="kinodynamic_astar/max_vel" value="1.0" type="double"/>
			<param name="kinodynamic_astar/max_acc" value="1.0" type="double"/>
			<param name="kinodynamic_astar/w_time" value="15.0" type="double"/>
			<param name="kinodynamic_astar/horizon" value="9.0" type="double"/>
			<param name="kinodynamic_astar/lambda_heu" value="2.0" type="double"/>
			<param name="kinodynamic_astar/time_resolution" value="5.0" type="double"/>
			<param name="kinodynamic_astar/margin" value="0.4" type="double"/>
			<param name="kinodynamic_astar/allocate_num" value="100000" type="int"/>
			<param name="kinodynamic_astar/check_num" value="5" type="int"/>
			<!-- 分辨率 -->
			<param name="map/resolution" value="0.2" type="double"/>
			<!-- 障碍物膨胀距离 -->
			<param name="map/inflate" value="0.8" type="double"/>
			<!-- 地图范围 -->
			<param name="map/origin_x" value="-15.0" type="double"/>
			<param name="map/origin_y" value="-15.0" type="double"/>
			<param name="map/origin_z" value="0.2" type="double"/>
			<param name="map/map_size_x" value="30.0" type="double"/>
			<param name="map/map_size_y" value="30.0" type="double"/>
			<param name="map/map_size_z" value="3.0" type="double"/>
		</node>
	</group>




	<!-- 启动rviz,设为false可关闭 -->
	<group if="$(arg visualization)">
		<node type="rviz" name="rviz" pkg="rviz" args="-d $(find prometheus_gazebo)/config/rviz_config/rviz_config_astar.rviz" />
		<!-- 真实点云 -->
		<node pkg="prometheus_slam" type="pc2_publisher_node" name="pc2_publisher_node" output="screen">	
			<param name="pcd_path" type="string" value="$(arg pcd_file)" />
		</node>
	</group>
</launch>

